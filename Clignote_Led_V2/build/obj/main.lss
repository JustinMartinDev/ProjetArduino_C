
main.elf:     format de fichier elf32-avr

Sections :
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000110  00000184  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000110  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000863  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006aa  00000000  00000000  00000a63  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000012d  00000000  00000000  0000110d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  0000123c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000036b  00000000  00000000  00001280  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001b0  00000000  00000000  000015eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000179b  2**0
                  CONTENTS, READONLY, DEBUGGING

Déassemblage de la section .text :

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 81 00 	call	0x102	; 0x102 <main>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <setup>:
void blinkMyLed();

void setup (void)
{
	
	DDRD = 0b01110000; // broche D4
  80:	80 e7       	ldi	r24, 0x70	; 112
  82:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0b00000000; //Port D for D4 
  84:	1b b8       	out	0x0b, r1	; 11
  86:	08 95       	ret

00000088 <blinkMyLed>:
	
	return 0;
}

void blinkMyLed() {
		PORTD |= 0b00010000; //allumer only D4
  88:	5c 9a       	sbi	0x0b, 4	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8a:	2f ef       	ldi	r18, 0xFF	; 255
  8c:	84 e3       	ldi	r24, 0x34	; 52
  8e:	9c e0       	ldi	r25, 0x0C	; 12
  90:	21 50       	subi	r18, 0x01	; 1
  92:	80 40       	sbci	r24, 0x00	; 0
  94:	90 40       	sbci	r25, 0x00	; 0
  96:	e1 f7       	brne	.-8      	; 0x90 <blinkMyLed+0x8>
  98:	00 c0       	rjmp	.+0      	; 0x9a <blinkMyLed+0x12>
  9a:	00 00       	nop
		_delay_ms (250);
		PORTD |= 0b00100000; //allumer only D5
  9c:	5d 9a       	sbi	0x0b, 5	; 11
  9e:	2f ef       	ldi	r18, 0xFF	; 255
  a0:	84 e3       	ldi	r24, 0x34	; 52
  a2:	9c e0       	ldi	r25, 0x0C	; 12
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	80 40       	sbci	r24, 0x00	; 0
  a8:	90 40       	sbci	r25, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <blinkMyLed+0x1c>
  ac:	00 c0       	rjmp	.+0      	; 0xae <blinkMyLed+0x26>
  ae:	00 00       	nop
		_delay_ms (250);
		PORTD |= 0b01000000; //allumer only D6
  b0:	5e 9a       	sbi	0x0b, 6	; 11
  b2:	2f ef       	ldi	r18, 0xFF	; 255
  b4:	84 e3       	ldi	r24, 0x34	; 52
  b6:	9c e0       	ldi	r25, 0x0C	; 12
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	80 40       	sbci	r24, 0x00	; 0
  bc:	90 40       	sbci	r25, 0x00	; 0
  be:	e1 f7       	brne	.-8      	; 0xb8 <blinkMyLed+0x30>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <blinkMyLed+0x3a>
  c2:	00 00       	nop
		_delay_ms (250);
		
		
		PORTD &= 0b11101111; //eteindre D4
  c4:	5c 98       	cbi	0x0b, 4	; 11
  c6:	2f ef       	ldi	r18, 0xFF	; 255
  c8:	84 e3       	ldi	r24, 0x34	; 52
  ca:	9c e0       	ldi	r25, 0x0C	; 12
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	80 40       	sbci	r24, 0x00	; 0
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <blinkMyLed+0x44>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <blinkMyLed+0x4e>
  d6:	00 00       	nop
		_delay_ms (250);
		PORTD &= 0b11011111; //eteindre D5
  d8:	5d 98       	cbi	0x0b, 5	; 11
  da:	2f ef       	ldi	r18, 0xFF	; 255
  dc:	84 e3       	ldi	r24, 0x34	; 52
  de:	9c e0       	ldi	r25, 0x0C	; 12
  e0:	21 50       	subi	r18, 0x01	; 1
  e2:	80 40       	sbci	r24, 0x00	; 0
  e4:	90 40       	sbci	r25, 0x00	; 0
  e6:	e1 f7       	brne	.-8      	; 0xe0 <blinkMyLed+0x58>
  e8:	00 c0       	rjmp	.+0      	; 0xea <blinkMyLed+0x62>
  ea:	00 00       	nop
		_delay_ms (250);
		PORTD &= 0b10111111; //eteindre D6
  ec:	5e 98       	cbi	0x0b, 6	; 11
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	84 e3       	ldi	r24, 0x34	; 52
  f2:	9c e0       	ldi	r25, 0x0C	; 12
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <blinkMyLed+0x6c>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <blinkMyLed+0x76>
  fe:	00 00       	nop
 100:	08 95       	ret

00000102 <main>:
	PORTD = 0b00000000; //Port D for D4 
}

int main (void)
{
	setup();
 102:	0e 94 40 00 	call	0x80	; 0x80 <setup>
	while(1){	
		blinkMyLed();
 106:	0e 94 44 00 	call	0x88	; 0x88 <blinkMyLed>
 10a:	fd cf       	rjmp	.-6      	; 0x106 <main+0x4>

0000010c <_exit>:
 10c:	f8 94       	cli

0000010e <__stop_program>:
 10e:	ff cf       	rjmp	.-2      	; 0x10e <__stop_program>
