
main.elf:     format de fichier elf32-avr

Sections :
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000818  000008ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000818  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800118  00800118  000008c4  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008ef  00000000  00000000  00000940  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007b0  00000000  00000000  0000122f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001b5  00000000  00000000  000019df  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000088  00000000  00000000  00001b94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003eb  00000000  00000000  00001c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000142  00000000  00000000  00002007  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00002149  2**0
                  CONTENTS, READONLY, DEBUGGING

Déassemblage de la section .text :

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e1       	ldi	r30, 0x18	; 24
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e1       	ldi	r26, 0x18	; 24
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 31       	cpi	r26, 0x1E	; 30
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a0 00 	call	0x140	; 0x140 <main>
  9e:	0c 94 0a 04 	jmp	0x814	; 0x814 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
	static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL,_FDEV_SETUP_WRITE);
	stdout = &mystdout;
    
} 

static int uart_putchar(char c, FILE *stream){
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
  if (c == '\n')
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
    uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
  loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  b8:	85 ff       	sbrs	r24, 5
  ba:	fc cf       	rjmp	.-8      	; 0xb4 <uart_putchar+0xe>
  UDR0 = c;
  bc:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  return 0;
}
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	cf 91       	pop	r28
  c6:	08 95       	ret

000000c8 <setup>:
int readPotValue(void);
void init_USART (unsigned int);
static int uart_putchar(char c, FILE *stream);

void setup (void) {
	DDRD = 0b01110000; // broche D4, D5, D6
  c8:	80 e7       	ldi	r24, 0x70	; 112
  ca:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0b00000000; //Port D
  cc:	1b b8       	out	0x0b, r1	; 11
	
	DDRC = 0b00000000; //initialisation des inputs sur A0
  ce:	17 b8       	out	0x07, r1	; 7
	PORTC = 0b00000001; //Initialisation du port C
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	88 b9       	out	0x08, r24	; 8
	
	ADCSRA = 0b10000010;//Initialisation du Lecture_Analogique_ADC0
  d4:	82 e8       	ldi	r24, 0x82	; 130
  d6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ADCSRB = 0b00000000;//Mode de d�clenchement Lecture_Analogique_ADC0
  da:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	ADMUX = 0b01000000;	
  de:	80 e4       	ldi	r24, 0x40	; 64
  e0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
  e4:	08 95       	ret

000000e6 <readPotValue>:
	
}

int readPotValue(void) {
	ADCSRA = 0b11000010;//Initialisation du Lecture_Analogique_ADC0
  e6:	82 ec       	ldi	r24, 0xC2	; 194
  e8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	int value = ADCL + (ADCH<<8);	
  ec:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  f0:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	return value;					
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	98 2f       	mov	r25, r24
  f8:	88 27       	eor	r24, r24
}
  fa:	82 0f       	add	r24, r18
  fc:	91 1d       	adc	r25, r1
  fe:	08 95       	ret

00000100 <init_USART>:

void init_USART (unsigned int baud) {
	int UBRR = (int)((FOSC / 16 / baud) - 1); 
 100:	9c 01       	movw	r18, r24
 102:	40 e0       	ldi	r20, 0x00	; 0
 104:	50 e0       	ldi	r21, 0x00	; 0
 106:	60 e4       	ldi	r22, 0x40	; 64
 108:	72 e4       	ldi	r23, 0x42	; 66
 10a:	8f e0       	ldi	r24, 0x0F	; 15
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <__divmodsi4>
 112:	21 50       	subi	r18, 0x01	; 1
 114:	31 09       	sbc	r19, r1
	/* Initialisation des registres UBRR0L et UBRRR0H */ 
	UBRR0L = (unsigned char) UBRR;
 116:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UBRR0H = (unsigned char)(UBRR>>8);
 11a:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	
	//Initialisation des registres UCSR0A, UCSR0B et UCSR0C
	
	//UCSR0A |= 0b00100000;
	UCSR0B |= 0b00011000;
 11e:	e1 ec       	ldi	r30, 0xC1	; 193
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	88 61       	ori	r24, 0x18	; 24
 126:	80 83       	st	Z, r24
	UCSR0C |= 0b00000110;
 128:	e2 ec       	ldi	r30, 0xC2	; 194
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	86 60       	ori	r24, 0x06	; 6
 130:	80 83       	st	Z, r24
   
   
	static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL,_FDEV_SETUP_WRITE);
	stdout = &mystdout;
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	91 e0       	ldi	r25, 0x01	; 1
 136:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x3>
 13a:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end+0x2>
 13e:	08 95       	ret

00000140 <main>:
  UDR0 = c;
  return 0;
}

int main (void) {
	setup();
 140:	0e 94 64 00 	call	0xc8	; 0xc8 <setup>
	init_USART(BAUD);
 144:	80 e8       	ldi	r24, 0x80	; 128
 146:	95 e2       	ldi	r25, 0x25	; 37
 148:	0e 94 80 00 	call	0x100	; 0x100 <init_USART>
	int value;
	int valueMaxRef = 0;
 14c:	c0 e0       	ldi	r28, 0x00	; 0
 14e:	d0 e0       	ldi	r29, 0x00	; 0
			
		if(value > ((valueMaxRef/4)*3))
			PORTD |= 0b01000000; //allumer D6
		
		_delay_ms (250);
		printf("%d\n", readPotValue());
 150:	e4 e1       	ldi	r30, 0x14	; 20
 152:	ee 2e       	mov	r14, r30
 154:	e1 e0       	ldi	r30, 0x01	; 1
 156:	fe 2e       	mov	r15, r30
		printf("MAX : %d\n", valueMaxRef);
 158:	0e e0       	ldi	r16, 0x0E	; 14
 15a:	11 e0       	ldi	r17, 0x01	; 1
	init_USART(BAUD);
	int value;
	int valueMaxRef = 0;

    while(1) {
		PORTD = 0b00000000; 
 15c:	1b b8       	out	0x0b, r1	; 11
		
		value = readPotValue();
 15e:	0e 94 73 00 	call	0xe6	; 0xe6 <readPotValue>
 162:	c8 17       	cp	r28, r24
 164:	d9 07       	cpc	r29, r25
 166:	0c f4       	brge	.+2      	; 0x16a <main+0x2a>
 168:	ec 01       	movw	r28, r24

		if(value > valueMaxRef) //Changement de max (si besoin)
			valueMaxRef = value;
			
			
		if(value > ((valueMaxRef/4)))
 16a:	9e 01       	movw	r18, r28
 16c:	35 95       	asr	r19
 16e:	27 95       	ror	r18
 170:	35 95       	asr	r19
 172:	27 95       	ror	r18
 174:	28 17       	cp	r18, r24
 176:	39 07       	cpc	r19, r25
 178:	0c f4       	brge	.+2      	; 0x17c <main+0x3c>
			PORTD |= 0b00010000; //allumer D4
 17a:	5c 9a       	sbi	0x0b, 4	; 11
		
		if(value > ((valueMaxRef/4)*2))
 17c:	a9 01       	movw	r20, r18
 17e:	44 0f       	add	r20, r20
 180:	55 1f       	adc	r21, r21
 182:	48 17       	cp	r20, r24
 184:	59 07       	cpc	r21, r25
 186:	0c f4       	brge	.+2      	; 0x18a <main+0x4a>
			PORTD |= 0b00100000; //allumer D5
 188:	5d 9a       	sbi	0x0b, 5	; 11
			
		if(value > ((valueMaxRef/4)*3))
 18a:	24 0f       	add	r18, r20
 18c:	35 1f       	adc	r19, r21
 18e:	28 17       	cp	r18, r24
 190:	39 07       	cpc	r19, r25
 192:	0c f4       	brge	.+2      	; 0x196 <main+0x56>
			PORTD |= 0b01000000; //allumer D6
 194:	5e 9a       	sbi	0x0b, 6	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	2f ef       	ldi	r18, 0xFF	; 255
 198:	84 e3       	ldi	r24, 0x34	; 52
 19a:	9c e0       	ldi	r25, 0x0C	; 12
 19c:	21 50       	subi	r18, 0x01	; 1
 19e:	80 40       	sbci	r24, 0x00	; 0
 1a0:	90 40       	sbci	r25, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <main+0x5c>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <main+0x66>
 1a6:	00 00       	nop
		
		_delay_ms (250);
		printf("%d\n", readPotValue());
 1a8:	0e 94 73 00 	call	0xe6	; 0xe6 <readPotValue>
 1ac:	9f 93       	push	r25
 1ae:	8f 93       	push	r24
 1b0:	ff 92       	push	r15
 1b2:	ef 92       	push	r14
 1b4:	0e 94 2c 01 	call	0x258	; 0x258 <printf>
		printf("MAX : %d\n", valueMaxRef);
 1b8:	df 93       	push	r29
 1ba:	cf 93       	push	r28
 1bc:	1f 93       	push	r17
 1be:	0f 93       	push	r16
 1c0:	0e 94 2c 01 	call	0x258	; 0x258 <printf>
    }
 1c4:	8d b7       	in	r24, 0x3d	; 61
 1c6:	9e b7       	in	r25, 0x3e	; 62
 1c8:	08 96       	adiw	r24, 0x08	; 8
 1ca:	0f b6       	in	r0, 0x3f	; 63
 1cc:	f8 94       	cli
 1ce:	9e bf       	out	0x3e, r25	; 62
 1d0:	0f be       	out	0x3f, r0	; 63
 1d2:	8d bf       	out	0x3d, r24	; 61
 1d4:	c3 cf       	rjmp	.-122    	; 0x15c <main+0x1c>

000001d6 <__divmodsi4>:
 1d6:	05 2e       	mov	r0, r21
 1d8:	97 fb       	bst	r25, 7
 1da:	1e f4       	brtc	.+6      	; 0x1e2 <__divmodsi4+0xc>
 1dc:	00 94       	com	r0
 1de:	0e 94 02 01 	call	0x204	; 0x204 <__negsi2>
 1e2:	57 fd       	sbrc	r21, 7
 1e4:	07 d0       	rcall	.+14     	; 0x1f4 <__divmodsi4_neg2>
 1e6:	0e 94 0a 01 	call	0x214	; 0x214 <__udivmodsi4>
 1ea:	07 fc       	sbrc	r0, 7
 1ec:	03 d0       	rcall	.+6      	; 0x1f4 <__divmodsi4_neg2>
 1ee:	4e f4       	brtc	.+18     	; 0x202 <__divmodsi4_exit>
 1f0:	0c 94 02 01 	jmp	0x204	; 0x204 <__negsi2>

000001f4 <__divmodsi4_neg2>:
 1f4:	50 95       	com	r21
 1f6:	40 95       	com	r20
 1f8:	30 95       	com	r19
 1fa:	21 95       	neg	r18
 1fc:	3f 4f       	sbci	r19, 0xFF	; 255
 1fe:	4f 4f       	sbci	r20, 0xFF	; 255
 200:	5f 4f       	sbci	r21, 0xFF	; 255

00000202 <__divmodsi4_exit>:
 202:	08 95       	ret

00000204 <__negsi2>:
 204:	90 95       	com	r25
 206:	80 95       	com	r24
 208:	70 95       	com	r23
 20a:	61 95       	neg	r22
 20c:	7f 4f       	sbci	r23, 0xFF	; 255
 20e:	8f 4f       	sbci	r24, 0xFF	; 255
 210:	9f 4f       	sbci	r25, 0xFF	; 255
 212:	08 95       	ret

00000214 <__udivmodsi4>:
 214:	a1 e2       	ldi	r26, 0x21	; 33
 216:	1a 2e       	mov	r1, r26
 218:	aa 1b       	sub	r26, r26
 21a:	bb 1b       	sub	r27, r27
 21c:	fd 01       	movw	r30, r26
 21e:	0d c0       	rjmp	.+26     	; 0x23a <__udivmodsi4_ep>

00000220 <__udivmodsi4_loop>:
 220:	aa 1f       	adc	r26, r26
 222:	bb 1f       	adc	r27, r27
 224:	ee 1f       	adc	r30, r30
 226:	ff 1f       	adc	r31, r31
 228:	a2 17       	cp	r26, r18
 22a:	b3 07       	cpc	r27, r19
 22c:	e4 07       	cpc	r30, r20
 22e:	f5 07       	cpc	r31, r21
 230:	20 f0       	brcs	.+8      	; 0x23a <__udivmodsi4_ep>
 232:	a2 1b       	sub	r26, r18
 234:	b3 0b       	sbc	r27, r19
 236:	e4 0b       	sbc	r30, r20
 238:	f5 0b       	sbc	r31, r21

0000023a <__udivmodsi4_ep>:
 23a:	66 1f       	adc	r22, r22
 23c:	77 1f       	adc	r23, r23
 23e:	88 1f       	adc	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	1a 94       	dec	r1
 244:	69 f7       	brne	.-38     	; 0x220 <__udivmodsi4_loop>
 246:	60 95       	com	r22
 248:	70 95       	com	r23
 24a:	80 95       	com	r24
 24c:	90 95       	com	r25
 24e:	9b 01       	movw	r18, r22
 250:	ac 01       	movw	r20, r24
 252:	bd 01       	movw	r22, r26
 254:	cf 01       	movw	r24, r30
 256:	08 95       	ret

00000258 <printf>:
 258:	a0 e0       	ldi	r26, 0x00	; 0
 25a:	b0 e0       	ldi	r27, 0x00	; 0
 25c:	e2 e3       	ldi	r30, 0x32	; 50
 25e:	f1 e0       	ldi	r31, 0x01	; 1
 260:	0c 94 e3 03 	jmp	0x7c6	; 0x7c6 <__prologue_saves__+0x20>
 264:	ae 01       	movw	r20, r28
 266:	4b 5f       	subi	r20, 0xFB	; 251
 268:	5f 4f       	sbci	r21, 0xFF	; 255
 26a:	fa 01       	movw	r30, r20
 26c:	61 91       	ld	r22, Z+
 26e:	71 91       	ld	r23, Z+
 270:	af 01       	movw	r20, r30
 272:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end+0x2>
 276:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x3>
 27a:	0e 94 42 01 	call	0x284	; 0x284 <vfprintf>
 27e:	e2 e0       	ldi	r30, 0x02	; 2
 280:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__epilogue_restores__+0x20>

00000284 <vfprintf>:
 284:	ab e0       	ldi	r26, 0x0B	; 11
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	e8 e4       	ldi	r30, 0x48	; 72
 28a:	f1 e0       	ldi	r31, 0x01	; 1
 28c:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__prologue_saves__>
 290:	6c 01       	movw	r12, r24
 292:	7b 01       	movw	r14, r22
 294:	8a 01       	movw	r16, r20
 296:	fc 01       	movw	r30, r24
 298:	17 82       	std	Z+7, r1	; 0x07
 29a:	16 82       	std	Z+6, r1	; 0x06
 29c:	83 81       	ldd	r24, Z+3	; 0x03
 29e:	81 ff       	sbrs	r24, 1
 2a0:	cc c1       	rjmp	.+920    	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 2a2:	ce 01       	movw	r24, r28
 2a4:	01 96       	adiw	r24, 0x01	; 1
 2a6:	3c 01       	movw	r6, r24
 2a8:	f6 01       	movw	r30, r12
 2aa:	93 81       	ldd	r25, Z+3	; 0x03
 2ac:	f7 01       	movw	r30, r14
 2ae:	93 fd       	sbrc	r25, 3
 2b0:	85 91       	lpm	r24, Z+
 2b2:	93 ff       	sbrs	r25, 3
 2b4:	81 91       	ld	r24, Z+
 2b6:	7f 01       	movw	r14, r30
 2b8:	88 23       	and	r24, r24
 2ba:	09 f4       	brne	.+2      	; 0x2be <vfprintf+0x3a>
 2bc:	ba c1       	rjmp	.+884    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 2be:	85 32       	cpi	r24, 0x25	; 37
 2c0:	39 f4       	brne	.+14     	; 0x2d0 <vfprintf+0x4c>
 2c2:	93 fd       	sbrc	r25, 3
 2c4:	85 91       	lpm	r24, Z+
 2c6:	93 ff       	sbrs	r25, 3
 2c8:	81 91       	ld	r24, Z+
 2ca:	7f 01       	movw	r14, r30
 2cc:	85 32       	cpi	r24, 0x25	; 37
 2ce:	29 f4       	brne	.+10     	; 0x2da <vfprintf+0x56>
 2d0:	b6 01       	movw	r22, r12
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 2d8:	e7 cf       	rjmp	.-50     	; 0x2a8 <vfprintf+0x24>
 2da:	91 2c       	mov	r9, r1
 2dc:	21 2c       	mov	r2, r1
 2de:	31 2c       	mov	r3, r1
 2e0:	ff e1       	ldi	r31, 0x1F	; 31
 2e2:	f3 15       	cp	r31, r3
 2e4:	d8 f0       	brcs	.+54     	; 0x31c <vfprintf+0x98>
 2e6:	8b 32       	cpi	r24, 0x2B	; 43
 2e8:	79 f0       	breq	.+30     	; 0x308 <vfprintf+0x84>
 2ea:	38 f4       	brcc	.+14     	; 0x2fa <vfprintf+0x76>
 2ec:	80 32       	cpi	r24, 0x20	; 32
 2ee:	79 f0       	breq	.+30     	; 0x30e <vfprintf+0x8a>
 2f0:	83 32       	cpi	r24, 0x23	; 35
 2f2:	a1 f4       	brne	.+40     	; 0x31c <vfprintf+0x98>
 2f4:	23 2d       	mov	r18, r3
 2f6:	20 61       	ori	r18, 0x10	; 16
 2f8:	1d c0       	rjmp	.+58     	; 0x334 <vfprintf+0xb0>
 2fa:	8d 32       	cpi	r24, 0x2D	; 45
 2fc:	61 f0       	breq	.+24     	; 0x316 <vfprintf+0x92>
 2fe:	80 33       	cpi	r24, 0x30	; 48
 300:	69 f4       	brne	.+26     	; 0x31c <vfprintf+0x98>
 302:	23 2d       	mov	r18, r3
 304:	21 60       	ori	r18, 0x01	; 1
 306:	16 c0       	rjmp	.+44     	; 0x334 <vfprintf+0xb0>
 308:	83 2d       	mov	r24, r3
 30a:	82 60       	ori	r24, 0x02	; 2
 30c:	38 2e       	mov	r3, r24
 30e:	e3 2d       	mov	r30, r3
 310:	e4 60       	ori	r30, 0x04	; 4
 312:	3e 2e       	mov	r3, r30
 314:	2a c0       	rjmp	.+84     	; 0x36a <vfprintf+0xe6>
 316:	f3 2d       	mov	r31, r3
 318:	f8 60       	ori	r31, 0x08	; 8
 31a:	1d c0       	rjmp	.+58     	; 0x356 <vfprintf+0xd2>
 31c:	37 fc       	sbrc	r3, 7
 31e:	2d c0       	rjmp	.+90     	; 0x37a <vfprintf+0xf6>
 320:	20 ed       	ldi	r18, 0xD0	; 208
 322:	28 0f       	add	r18, r24
 324:	2a 30       	cpi	r18, 0x0A	; 10
 326:	40 f0       	brcs	.+16     	; 0x338 <vfprintf+0xb4>
 328:	8e 32       	cpi	r24, 0x2E	; 46
 32a:	b9 f4       	brne	.+46     	; 0x35a <vfprintf+0xd6>
 32c:	36 fc       	sbrc	r3, 6
 32e:	81 c1       	rjmp	.+770    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 330:	23 2d       	mov	r18, r3
 332:	20 64       	ori	r18, 0x40	; 64
 334:	32 2e       	mov	r3, r18
 336:	19 c0       	rjmp	.+50     	; 0x36a <vfprintf+0xe6>
 338:	36 fe       	sbrs	r3, 6
 33a:	06 c0       	rjmp	.+12     	; 0x348 <vfprintf+0xc4>
 33c:	8a e0       	ldi	r24, 0x0A	; 10
 33e:	98 9e       	mul	r9, r24
 340:	20 0d       	add	r18, r0
 342:	11 24       	eor	r1, r1
 344:	92 2e       	mov	r9, r18
 346:	11 c0       	rjmp	.+34     	; 0x36a <vfprintf+0xe6>
 348:	ea e0       	ldi	r30, 0x0A	; 10
 34a:	2e 9e       	mul	r2, r30
 34c:	20 0d       	add	r18, r0
 34e:	11 24       	eor	r1, r1
 350:	22 2e       	mov	r2, r18
 352:	f3 2d       	mov	r31, r3
 354:	f0 62       	ori	r31, 0x20	; 32
 356:	3f 2e       	mov	r3, r31
 358:	08 c0       	rjmp	.+16     	; 0x36a <vfprintf+0xe6>
 35a:	8c 36       	cpi	r24, 0x6C	; 108
 35c:	21 f4       	brne	.+8      	; 0x366 <vfprintf+0xe2>
 35e:	83 2d       	mov	r24, r3
 360:	80 68       	ori	r24, 0x80	; 128
 362:	38 2e       	mov	r3, r24
 364:	02 c0       	rjmp	.+4      	; 0x36a <vfprintf+0xe6>
 366:	88 36       	cpi	r24, 0x68	; 104
 368:	41 f4       	brne	.+16     	; 0x37a <vfprintf+0xf6>
 36a:	f7 01       	movw	r30, r14
 36c:	93 fd       	sbrc	r25, 3
 36e:	85 91       	lpm	r24, Z+
 370:	93 ff       	sbrs	r25, 3
 372:	81 91       	ld	r24, Z+
 374:	7f 01       	movw	r14, r30
 376:	81 11       	cpse	r24, r1
 378:	b3 cf       	rjmp	.-154    	; 0x2e0 <vfprintf+0x5c>
 37a:	98 2f       	mov	r25, r24
 37c:	9f 7d       	andi	r25, 0xDF	; 223
 37e:	95 54       	subi	r25, 0x45	; 69
 380:	93 30       	cpi	r25, 0x03	; 3
 382:	28 f4       	brcc	.+10     	; 0x38e <vfprintf+0x10a>
 384:	0c 5f       	subi	r16, 0xFC	; 252
 386:	1f 4f       	sbci	r17, 0xFF	; 255
 388:	9f e3       	ldi	r25, 0x3F	; 63
 38a:	99 83       	std	Y+1, r25	; 0x01
 38c:	0d c0       	rjmp	.+26     	; 0x3a8 <vfprintf+0x124>
 38e:	83 36       	cpi	r24, 0x63	; 99
 390:	31 f0       	breq	.+12     	; 0x39e <vfprintf+0x11a>
 392:	83 37       	cpi	r24, 0x73	; 115
 394:	71 f0       	breq	.+28     	; 0x3b2 <vfprintf+0x12e>
 396:	83 35       	cpi	r24, 0x53	; 83
 398:	09 f0       	breq	.+2      	; 0x39c <vfprintf+0x118>
 39a:	59 c0       	rjmp	.+178    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 39c:	21 c0       	rjmp	.+66     	; 0x3e0 <vfprintf+0x15c>
 39e:	f8 01       	movw	r30, r16
 3a0:	80 81       	ld	r24, Z
 3a2:	89 83       	std	Y+1, r24	; 0x01
 3a4:	0e 5f       	subi	r16, 0xFE	; 254
 3a6:	1f 4f       	sbci	r17, 0xFF	; 255
 3a8:	88 24       	eor	r8, r8
 3aa:	83 94       	inc	r8
 3ac:	91 2c       	mov	r9, r1
 3ae:	53 01       	movw	r10, r6
 3b0:	13 c0       	rjmp	.+38     	; 0x3d8 <vfprintf+0x154>
 3b2:	28 01       	movw	r4, r16
 3b4:	f2 e0       	ldi	r31, 0x02	; 2
 3b6:	4f 0e       	add	r4, r31
 3b8:	51 1c       	adc	r5, r1
 3ba:	f8 01       	movw	r30, r16
 3bc:	a0 80       	ld	r10, Z
 3be:	b1 80       	ldd	r11, Z+1	; 0x01
 3c0:	36 fe       	sbrs	r3, 6
 3c2:	03 c0       	rjmp	.+6      	; 0x3ca <vfprintf+0x146>
 3c4:	69 2d       	mov	r22, r9
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <vfprintf+0x14a>
 3ca:	6f ef       	ldi	r22, 0xFF	; 255
 3cc:	7f ef       	ldi	r23, 0xFF	; 255
 3ce:	c5 01       	movw	r24, r10
 3d0:	0e 94 2e 03 	call	0x65c	; 0x65c <strnlen>
 3d4:	4c 01       	movw	r8, r24
 3d6:	82 01       	movw	r16, r4
 3d8:	f3 2d       	mov	r31, r3
 3da:	ff 77       	andi	r31, 0x7F	; 127
 3dc:	3f 2e       	mov	r3, r31
 3de:	16 c0       	rjmp	.+44     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3e0:	28 01       	movw	r4, r16
 3e2:	22 e0       	ldi	r18, 0x02	; 2
 3e4:	42 0e       	add	r4, r18
 3e6:	51 1c       	adc	r5, r1
 3e8:	f8 01       	movw	r30, r16
 3ea:	a0 80       	ld	r10, Z
 3ec:	b1 80       	ldd	r11, Z+1	; 0x01
 3ee:	36 fe       	sbrs	r3, 6
 3f0:	03 c0       	rjmp	.+6      	; 0x3f8 <vfprintf+0x174>
 3f2:	69 2d       	mov	r22, r9
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <vfprintf+0x178>
 3f8:	6f ef       	ldi	r22, 0xFF	; 255
 3fa:	7f ef       	ldi	r23, 0xFF	; 255
 3fc:	c5 01       	movw	r24, r10
 3fe:	0e 94 23 03 	call	0x646	; 0x646 <strnlen_P>
 402:	4c 01       	movw	r8, r24
 404:	f3 2d       	mov	r31, r3
 406:	f0 68       	ori	r31, 0x80	; 128
 408:	3f 2e       	mov	r3, r31
 40a:	82 01       	movw	r16, r4
 40c:	33 fc       	sbrc	r3, 3
 40e:	1b c0       	rjmp	.+54     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 410:	82 2d       	mov	r24, r2
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	88 16       	cp	r8, r24
 416:	99 06       	cpc	r9, r25
 418:	b0 f4       	brcc	.+44     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 41a:	b6 01       	movw	r22, r12
 41c:	80 e2       	ldi	r24, 0x20	; 32
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 424:	2a 94       	dec	r2
 426:	f4 cf       	rjmp	.-24     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 428:	f5 01       	movw	r30, r10
 42a:	37 fc       	sbrc	r3, 7
 42c:	85 91       	lpm	r24, Z+
 42e:	37 fe       	sbrs	r3, 7
 430:	81 91       	ld	r24, Z+
 432:	5f 01       	movw	r10, r30
 434:	b6 01       	movw	r22, r12
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 43c:	21 10       	cpse	r2, r1
 43e:	2a 94       	dec	r2
 440:	21 e0       	ldi	r18, 0x01	; 1
 442:	82 1a       	sub	r8, r18
 444:	91 08       	sbc	r9, r1
 446:	81 14       	cp	r8, r1
 448:	91 04       	cpc	r9, r1
 44a:	71 f7       	brne	.-36     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 44c:	e8 c0       	rjmp	.+464    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 44e:	84 36       	cpi	r24, 0x64	; 100
 450:	11 f0       	breq	.+4      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 452:	89 36       	cpi	r24, 0x69	; 105
 454:	41 f5       	brne	.+80     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 456:	f8 01       	movw	r30, r16
 458:	37 fe       	sbrs	r3, 7
 45a:	07 c0       	rjmp	.+14     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 45c:	60 81       	ld	r22, Z
 45e:	71 81       	ldd	r23, Z+1	; 0x01
 460:	82 81       	ldd	r24, Z+2	; 0x02
 462:	93 81       	ldd	r25, Z+3	; 0x03
 464:	0c 5f       	subi	r16, 0xFC	; 252
 466:	1f 4f       	sbci	r17, 0xFF	; 255
 468:	08 c0       	rjmp	.+16     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 46a:	60 81       	ld	r22, Z
 46c:	71 81       	ldd	r23, Z+1	; 0x01
 46e:	07 2e       	mov	r0, r23
 470:	00 0c       	add	r0, r0
 472:	88 0b       	sbc	r24, r24
 474:	99 0b       	sbc	r25, r25
 476:	0e 5f       	subi	r16, 0xFE	; 254
 478:	1f 4f       	sbci	r17, 0xFF	; 255
 47a:	f3 2d       	mov	r31, r3
 47c:	ff 76       	andi	r31, 0x6F	; 111
 47e:	3f 2e       	mov	r3, r31
 480:	97 ff       	sbrs	r25, 7
 482:	09 c0       	rjmp	.+18     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 484:	90 95       	com	r25
 486:	80 95       	com	r24
 488:	70 95       	com	r23
 48a:	61 95       	neg	r22
 48c:	7f 4f       	sbci	r23, 0xFF	; 255
 48e:	8f 4f       	sbci	r24, 0xFF	; 255
 490:	9f 4f       	sbci	r25, 0xFF	; 255
 492:	f0 68       	ori	r31, 0x80	; 128
 494:	3f 2e       	mov	r3, r31
 496:	2a e0       	ldi	r18, 0x0A	; 10
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	a3 01       	movw	r20, r6
 49c:	0e 94 75 03 	call	0x6ea	; 0x6ea <__ultoa_invert>
 4a0:	88 2e       	mov	r8, r24
 4a2:	86 18       	sub	r8, r6
 4a4:	45 c0       	rjmp	.+138    	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 4a6:	85 37       	cpi	r24, 0x75	; 117
 4a8:	31 f4       	brne	.+12     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4aa:	23 2d       	mov	r18, r3
 4ac:	2f 7e       	andi	r18, 0xEF	; 239
 4ae:	b2 2e       	mov	r11, r18
 4b0:	2a e0       	ldi	r18, 0x0A	; 10
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	25 c0       	rjmp	.+74     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4b6:	93 2d       	mov	r25, r3
 4b8:	99 7f       	andi	r25, 0xF9	; 249
 4ba:	b9 2e       	mov	r11, r25
 4bc:	8f 36       	cpi	r24, 0x6F	; 111
 4be:	c1 f0       	breq	.+48     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4c0:	18 f4       	brcc	.+6      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c2:	88 35       	cpi	r24, 0x58	; 88
 4c4:	79 f0       	breq	.+30     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4c6:	b5 c0       	rjmp	.+362    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 4c8:	80 37       	cpi	r24, 0x70	; 112
 4ca:	19 f0       	breq	.+6      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4cc:	88 37       	cpi	r24, 0x78	; 120
 4ce:	21 f0       	breq	.+8      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d0:	b0 c0       	rjmp	.+352    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 4d2:	e9 2f       	mov	r30, r25
 4d4:	e0 61       	ori	r30, 0x10	; 16
 4d6:	be 2e       	mov	r11, r30
 4d8:	b4 fe       	sbrs	r11, 4
 4da:	0d c0       	rjmp	.+26     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4dc:	fb 2d       	mov	r31, r11
 4de:	f4 60       	ori	r31, 0x04	; 4
 4e0:	bf 2e       	mov	r11, r31
 4e2:	09 c0       	rjmp	.+18     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4e4:	34 fe       	sbrs	r3, 4
 4e6:	0a c0       	rjmp	.+20     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4e8:	29 2f       	mov	r18, r25
 4ea:	26 60       	ori	r18, 0x06	; 6
 4ec:	b2 2e       	mov	r11, r18
 4ee:	06 c0       	rjmp	.+12     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f0:	28 e0       	ldi	r18, 0x08	; 8
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	05 c0       	rjmp	.+10     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4f6:	20 e1       	ldi	r18, 0x10	; 16
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fc:	20 e1       	ldi	r18, 0x10	; 16
 4fe:	32 e0       	ldi	r19, 0x02	; 2
 500:	f8 01       	movw	r30, r16
 502:	b7 fe       	sbrs	r11, 7
 504:	07 c0       	rjmp	.+14     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 506:	60 81       	ld	r22, Z
 508:	71 81       	ldd	r23, Z+1	; 0x01
 50a:	82 81       	ldd	r24, Z+2	; 0x02
 50c:	93 81       	ldd	r25, Z+3	; 0x03
 50e:	0c 5f       	subi	r16, 0xFC	; 252
 510:	1f 4f       	sbci	r17, 0xFF	; 255
 512:	06 c0       	rjmp	.+12     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 514:	60 81       	ld	r22, Z
 516:	71 81       	ldd	r23, Z+1	; 0x01
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	0e 5f       	subi	r16, 0xFE	; 254
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	a3 01       	movw	r20, r6
 522:	0e 94 75 03 	call	0x6ea	; 0x6ea <__ultoa_invert>
 526:	88 2e       	mov	r8, r24
 528:	86 18       	sub	r8, r6
 52a:	fb 2d       	mov	r31, r11
 52c:	ff 77       	andi	r31, 0x7F	; 127
 52e:	3f 2e       	mov	r3, r31
 530:	36 fe       	sbrs	r3, 6
 532:	0d c0       	rjmp	.+26     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 534:	23 2d       	mov	r18, r3
 536:	2e 7f       	andi	r18, 0xFE	; 254
 538:	a2 2e       	mov	r10, r18
 53a:	89 14       	cp	r8, r9
 53c:	58 f4       	brcc	.+22     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 53e:	34 fe       	sbrs	r3, 4
 540:	0b c0       	rjmp	.+22     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 542:	32 fc       	sbrc	r3, 2
 544:	09 c0       	rjmp	.+18     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 546:	83 2d       	mov	r24, r3
 548:	8e 7e       	andi	r24, 0xEE	; 238
 54a:	a8 2e       	mov	r10, r24
 54c:	05 c0       	rjmp	.+10     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 54e:	b8 2c       	mov	r11, r8
 550:	a3 2c       	mov	r10, r3
 552:	03 c0       	rjmp	.+6      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 554:	b8 2c       	mov	r11, r8
 556:	01 c0       	rjmp	.+2      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 558:	b9 2c       	mov	r11, r9
 55a:	a4 fe       	sbrs	r10, 4
 55c:	0f c0       	rjmp	.+30     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 55e:	fe 01       	movw	r30, r28
 560:	e8 0d       	add	r30, r8
 562:	f1 1d       	adc	r31, r1
 564:	80 81       	ld	r24, Z
 566:	80 33       	cpi	r24, 0x30	; 48
 568:	21 f4       	brne	.+8      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 56a:	9a 2d       	mov	r25, r10
 56c:	99 7e       	andi	r25, 0xE9	; 233
 56e:	a9 2e       	mov	r10, r25
 570:	09 c0       	rjmp	.+18     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 572:	a2 fe       	sbrs	r10, 2
 574:	06 c0       	rjmp	.+12     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 576:	b3 94       	inc	r11
 578:	b3 94       	inc	r11
 57a:	04 c0       	rjmp	.+8      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 57c:	8a 2d       	mov	r24, r10
 57e:	86 78       	andi	r24, 0x86	; 134
 580:	09 f0       	breq	.+2      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 582:	b3 94       	inc	r11
 584:	a3 fc       	sbrc	r10, 3
 586:	11 c0       	rjmp	.+34     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 588:	a0 fe       	sbrs	r10, 0
 58a:	06 c0       	rjmp	.+12     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 58c:	b2 14       	cp	r11, r2
 58e:	88 f4       	brcc	.+34     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 590:	28 0c       	add	r2, r8
 592:	92 2c       	mov	r9, r2
 594:	9b 18       	sub	r9, r11
 596:	0e c0       	rjmp	.+28     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 598:	b2 14       	cp	r11, r2
 59a:	60 f4       	brcc	.+24     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 59c:	b6 01       	movw	r22, r12
 59e:	80 e2       	ldi	r24, 0x20	; 32
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 5a6:	b3 94       	inc	r11
 5a8:	f7 cf       	rjmp	.-18     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 5aa:	b2 14       	cp	r11, r2
 5ac:	18 f4       	brcc	.+6      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5ae:	2b 18       	sub	r2, r11
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b2:	98 2c       	mov	r9, r8
 5b4:	21 2c       	mov	r2, r1
 5b6:	a4 fe       	sbrs	r10, 4
 5b8:	10 c0       	rjmp	.+32     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5ba:	b6 01       	movw	r22, r12
 5bc:	80 e3       	ldi	r24, 0x30	; 48
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 5c4:	a2 fe       	sbrs	r10, 2
 5c6:	17 c0       	rjmp	.+46     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5c8:	a1 fc       	sbrc	r10, 1
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5cc:	88 e7       	ldi	r24, 0x78	; 120
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d2:	88 e5       	ldi	r24, 0x58	; 88
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	b6 01       	movw	r22, r12
 5d8:	0c c0       	rjmp	.+24     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5da:	8a 2d       	mov	r24, r10
 5dc:	86 78       	andi	r24, 0x86	; 134
 5de:	59 f0       	breq	.+22     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5e0:	a1 fe       	sbrs	r10, 1
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5e4:	8b e2       	ldi	r24, 0x2B	; 43
 5e6:	01 c0       	rjmp	.+2      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e8:	80 e2       	ldi	r24, 0x20	; 32
 5ea:	a7 fc       	sbrc	r10, 7
 5ec:	8d e2       	ldi	r24, 0x2D	; 45
 5ee:	b6 01       	movw	r22, r12
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 5f6:	89 14       	cp	r8, r9
 5f8:	38 f4       	brcc	.+14     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5fa:	b6 01       	movw	r22, r12
 5fc:	80 e3       	ldi	r24, 0x30	; 48
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 604:	9a 94       	dec	r9
 606:	f7 cf       	rjmp	.-18     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 608:	8a 94       	dec	r8
 60a:	f3 01       	movw	r30, r6
 60c:	e8 0d       	add	r30, r8
 60e:	f1 1d       	adc	r31, r1
 610:	80 81       	ld	r24, Z
 612:	b6 01       	movw	r22, r12
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 61a:	81 10       	cpse	r8, r1
 61c:	f5 cf       	rjmp	.-22     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 61e:	22 20       	and	r2, r2
 620:	09 f4       	brne	.+2      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 622:	42 ce       	rjmp	.-892    	; 0x2a8 <vfprintf+0x24>
 624:	b6 01       	movw	r22, r12
 626:	80 e2       	ldi	r24, 0x20	; 32
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 39 03 	call	0x672	; 0x672 <fputc>
 62e:	2a 94       	dec	r2
 630:	f6 cf       	rjmp	.-20     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 632:	f6 01       	movw	r30, r12
 634:	86 81       	ldd	r24, Z+6	; 0x06
 636:	97 81       	ldd	r25, Z+7	; 0x07
 638:	02 c0       	rjmp	.+4      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 63a:	8f ef       	ldi	r24, 0xFF	; 255
 63c:	9f ef       	ldi	r25, 0xFF	; 255
 63e:	2b 96       	adiw	r28, 0x0b	; 11
 640:	e2 e1       	ldi	r30, 0x12	; 18
 642:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__epilogue_restores__>

00000646 <strnlen_P>:
 646:	fc 01       	movw	r30, r24
 648:	05 90       	lpm	r0, Z+
 64a:	61 50       	subi	r22, 0x01	; 1
 64c:	70 40       	sbci	r23, 0x00	; 0
 64e:	01 10       	cpse	r0, r1
 650:	d8 f7       	brcc	.-10     	; 0x648 <strnlen_P+0x2>
 652:	80 95       	com	r24
 654:	90 95       	com	r25
 656:	8e 0f       	add	r24, r30
 658:	9f 1f       	adc	r25, r31
 65a:	08 95       	ret

0000065c <strnlen>:
 65c:	fc 01       	movw	r30, r24
 65e:	61 50       	subi	r22, 0x01	; 1
 660:	70 40       	sbci	r23, 0x00	; 0
 662:	01 90       	ld	r0, Z+
 664:	01 10       	cpse	r0, r1
 666:	d8 f7       	brcc	.-10     	; 0x65e <strnlen+0x2>
 668:	80 95       	com	r24
 66a:	90 95       	com	r25
 66c:	8e 0f       	add	r24, r30
 66e:	9f 1f       	adc	r25, r31
 670:	08 95       	ret

00000672 <fputc>:
 672:	0f 93       	push	r16
 674:	1f 93       	push	r17
 676:	cf 93       	push	r28
 678:	df 93       	push	r29
 67a:	fb 01       	movw	r30, r22
 67c:	23 81       	ldd	r18, Z+3	; 0x03
 67e:	21 fd       	sbrc	r18, 1
 680:	03 c0       	rjmp	.+6      	; 0x688 <fputc+0x16>
 682:	8f ef       	ldi	r24, 0xFF	; 255
 684:	9f ef       	ldi	r25, 0xFF	; 255
 686:	2c c0       	rjmp	.+88     	; 0x6e0 <fputc+0x6e>
 688:	22 ff       	sbrs	r18, 2
 68a:	16 c0       	rjmp	.+44     	; 0x6b8 <fputc+0x46>
 68c:	46 81       	ldd	r20, Z+6	; 0x06
 68e:	57 81       	ldd	r21, Z+7	; 0x07
 690:	24 81       	ldd	r18, Z+4	; 0x04
 692:	35 81       	ldd	r19, Z+5	; 0x05
 694:	42 17       	cp	r20, r18
 696:	53 07       	cpc	r21, r19
 698:	44 f4       	brge	.+16     	; 0x6aa <fputc+0x38>
 69a:	a0 81       	ld	r26, Z
 69c:	b1 81       	ldd	r27, Z+1	; 0x01
 69e:	9d 01       	movw	r18, r26
 6a0:	2f 5f       	subi	r18, 0xFF	; 255
 6a2:	3f 4f       	sbci	r19, 0xFF	; 255
 6a4:	31 83       	std	Z+1, r19	; 0x01
 6a6:	20 83       	st	Z, r18
 6a8:	8c 93       	st	X, r24
 6aa:	26 81       	ldd	r18, Z+6	; 0x06
 6ac:	37 81       	ldd	r19, Z+7	; 0x07
 6ae:	2f 5f       	subi	r18, 0xFF	; 255
 6b0:	3f 4f       	sbci	r19, 0xFF	; 255
 6b2:	37 83       	std	Z+7, r19	; 0x07
 6b4:	26 83       	std	Z+6, r18	; 0x06
 6b6:	14 c0       	rjmp	.+40     	; 0x6e0 <fputc+0x6e>
 6b8:	8b 01       	movw	r16, r22
 6ba:	ec 01       	movw	r28, r24
 6bc:	fb 01       	movw	r30, r22
 6be:	00 84       	ldd	r0, Z+8	; 0x08
 6c0:	f1 85       	ldd	r31, Z+9	; 0x09
 6c2:	e0 2d       	mov	r30, r0
 6c4:	09 95       	icall
 6c6:	89 2b       	or	r24, r25
 6c8:	e1 f6       	brne	.-72     	; 0x682 <fputc+0x10>
 6ca:	d8 01       	movw	r26, r16
 6cc:	16 96       	adiw	r26, 0x06	; 6
 6ce:	8d 91       	ld	r24, X+
 6d0:	9c 91       	ld	r25, X
 6d2:	17 97       	sbiw	r26, 0x07	; 7
 6d4:	01 96       	adiw	r24, 0x01	; 1
 6d6:	17 96       	adiw	r26, 0x07	; 7
 6d8:	9c 93       	st	X, r25
 6da:	8e 93       	st	-X, r24
 6dc:	16 97       	sbiw	r26, 0x06	; 6
 6de:	ce 01       	movw	r24, r28
 6e0:	df 91       	pop	r29
 6e2:	cf 91       	pop	r28
 6e4:	1f 91       	pop	r17
 6e6:	0f 91       	pop	r16
 6e8:	08 95       	ret

000006ea <__ultoa_invert>:
 6ea:	fa 01       	movw	r30, r20
 6ec:	aa 27       	eor	r26, r26
 6ee:	28 30       	cpi	r18, 0x08	; 8
 6f0:	51 f1       	breq	.+84     	; 0x746 <__ultoa_invert+0x5c>
 6f2:	20 31       	cpi	r18, 0x10	; 16
 6f4:	81 f1       	breq	.+96     	; 0x756 <__ultoa_invert+0x6c>
 6f6:	e8 94       	clt
 6f8:	6f 93       	push	r22
 6fa:	6e 7f       	andi	r22, 0xFE	; 254
 6fc:	6e 5f       	subi	r22, 0xFE	; 254
 6fe:	7f 4f       	sbci	r23, 0xFF	; 255
 700:	8f 4f       	sbci	r24, 0xFF	; 255
 702:	9f 4f       	sbci	r25, 0xFF	; 255
 704:	af 4f       	sbci	r26, 0xFF	; 255
 706:	b1 e0       	ldi	r27, 0x01	; 1
 708:	3e d0       	rcall	.+124    	; 0x786 <__ultoa_invert+0x9c>
 70a:	b4 e0       	ldi	r27, 0x04	; 4
 70c:	3c d0       	rcall	.+120    	; 0x786 <__ultoa_invert+0x9c>
 70e:	67 0f       	add	r22, r23
 710:	78 1f       	adc	r23, r24
 712:	89 1f       	adc	r24, r25
 714:	9a 1f       	adc	r25, r26
 716:	a1 1d       	adc	r26, r1
 718:	68 0f       	add	r22, r24
 71a:	79 1f       	adc	r23, r25
 71c:	8a 1f       	adc	r24, r26
 71e:	91 1d       	adc	r25, r1
 720:	a1 1d       	adc	r26, r1
 722:	6a 0f       	add	r22, r26
 724:	71 1d       	adc	r23, r1
 726:	81 1d       	adc	r24, r1
 728:	91 1d       	adc	r25, r1
 72a:	a1 1d       	adc	r26, r1
 72c:	20 d0       	rcall	.+64     	; 0x76e <__ultoa_invert+0x84>
 72e:	09 f4       	brne	.+2      	; 0x732 <__ultoa_invert+0x48>
 730:	68 94       	set
 732:	3f 91       	pop	r19
 734:	2a e0       	ldi	r18, 0x0A	; 10
 736:	26 9f       	mul	r18, r22
 738:	11 24       	eor	r1, r1
 73a:	30 19       	sub	r19, r0
 73c:	30 5d       	subi	r19, 0xD0	; 208
 73e:	31 93       	st	Z+, r19
 740:	de f6       	brtc	.-74     	; 0x6f8 <__ultoa_invert+0xe>
 742:	cf 01       	movw	r24, r30
 744:	08 95       	ret
 746:	46 2f       	mov	r20, r22
 748:	47 70       	andi	r20, 0x07	; 7
 74a:	40 5d       	subi	r20, 0xD0	; 208
 74c:	41 93       	st	Z+, r20
 74e:	b3 e0       	ldi	r27, 0x03	; 3
 750:	0f d0       	rcall	.+30     	; 0x770 <__ultoa_invert+0x86>
 752:	c9 f7       	brne	.-14     	; 0x746 <__ultoa_invert+0x5c>
 754:	f6 cf       	rjmp	.-20     	; 0x742 <__ultoa_invert+0x58>
 756:	46 2f       	mov	r20, r22
 758:	4f 70       	andi	r20, 0x0F	; 15
 75a:	40 5d       	subi	r20, 0xD0	; 208
 75c:	4a 33       	cpi	r20, 0x3A	; 58
 75e:	18 f0       	brcs	.+6      	; 0x766 <__ultoa_invert+0x7c>
 760:	49 5d       	subi	r20, 0xD9	; 217
 762:	31 fd       	sbrc	r19, 1
 764:	40 52       	subi	r20, 0x20	; 32
 766:	41 93       	st	Z+, r20
 768:	02 d0       	rcall	.+4      	; 0x76e <__ultoa_invert+0x84>
 76a:	a9 f7       	brne	.-22     	; 0x756 <__ultoa_invert+0x6c>
 76c:	ea cf       	rjmp	.-44     	; 0x742 <__ultoa_invert+0x58>
 76e:	b4 e0       	ldi	r27, 0x04	; 4
 770:	a6 95       	lsr	r26
 772:	97 95       	ror	r25
 774:	87 95       	ror	r24
 776:	77 95       	ror	r23
 778:	67 95       	ror	r22
 77a:	ba 95       	dec	r27
 77c:	c9 f7       	brne	.-14     	; 0x770 <__ultoa_invert+0x86>
 77e:	00 97       	sbiw	r24, 0x00	; 0
 780:	61 05       	cpc	r22, r1
 782:	71 05       	cpc	r23, r1
 784:	08 95       	ret
 786:	9b 01       	movw	r18, r22
 788:	ac 01       	movw	r20, r24
 78a:	0a 2e       	mov	r0, r26
 78c:	06 94       	lsr	r0
 78e:	57 95       	ror	r21
 790:	47 95       	ror	r20
 792:	37 95       	ror	r19
 794:	27 95       	ror	r18
 796:	ba 95       	dec	r27
 798:	c9 f7       	brne	.-14     	; 0x78c <__ultoa_invert+0xa2>
 79a:	62 0f       	add	r22, r18
 79c:	73 1f       	adc	r23, r19
 79e:	84 1f       	adc	r24, r20
 7a0:	95 1f       	adc	r25, r21
 7a2:	a0 1d       	adc	r26, r0
 7a4:	08 95       	ret

000007a6 <__prologue_saves__>:
 7a6:	2f 92       	push	r2
 7a8:	3f 92       	push	r3
 7aa:	4f 92       	push	r4
 7ac:	5f 92       	push	r5
 7ae:	6f 92       	push	r6
 7b0:	7f 92       	push	r7
 7b2:	8f 92       	push	r8
 7b4:	9f 92       	push	r9
 7b6:	af 92       	push	r10
 7b8:	bf 92       	push	r11
 7ba:	cf 92       	push	r12
 7bc:	df 92       	push	r13
 7be:	ef 92       	push	r14
 7c0:	ff 92       	push	r15
 7c2:	0f 93       	push	r16
 7c4:	1f 93       	push	r17
 7c6:	cf 93       	push	r28
 7c8:	df 93       	push	r29
 7ca:	cd b7       	in	r28, 0x3d	; 61
 7cc:	de b7       	in	r29, 0x3e	; 62
 7ce:	ca 1b       	sub	r28, r26
 7d0:	db 0b       	sbc	r29, r27
 7d2:	0f b6       	in	r0, 0x3f	; 63
 7d4:	f8 94       	cli
 7d6:	de bf       	out	0x3e, r29	; 62
 7d8:	0f be       	out	0x3f, r0	; 63
 7da:	cd bf       	out	0x3d, r28	; 61
 7dc:	09 94       	ijmp

000007de <__epilogue_restores__>:
 7de:	2a 88       	ldd	r2, Y+18	; 0x12
 7e0:	39 88       	ldd	r3, Y+17	; 0x11
 7e2:	48 88       	ldd	r4, Y+16	; 0x10
 7e4:	5f 84       	ldd	r5, Y+15	; 0x0f
 7e6:	6e 84       	ldd	r6, Y+14	; 0x0e
 7e8:	7d 84       	ldd	r7, Y+13	; 0x0d
 7ea:	8c 84       	ldd	r8, Y+12	; 0x0c
 7ec:	9b 84       	ldd	r9, Y+11	; 0x0b
 7ee:	aa 84       	ldd	r10, Y+10	; 0x0a
 7f0:	b9 84       	ldd	r11, Y+9	; 0x09
 7f2:	c8 84       	ldd	r12, Y+8	; 0x08
 7f4:	df 80       	ldd	r13, Y+7	; 0x07
 7f6:	ee 80       	ldd	r14, Y+6	; 0x06
 7f8:	fd 80       	ldd	r15, Y+5	; 0x05
 7fa:	0c 81       	ldd	r16, Y+4	; 0x04
 7fc:	1b 81       	ldd	r17, Y+3	; 0x03
 7fe:	aa 81       	ldd	r26, Y+2	; 0x02
 800:	b9 81       	ldd	r27, Y+1	; 0x01
 802:	ce 0f       	add	r28, r30
 804:	d1 1d       	adc	r29, r1
 806:	0f b6       	in	r0, 0x3f	; 63
 808:	f8 94       	cli
 80a:	de bf       	out	0x3e, r29	; 62
 80c:	0f be       	out	0x3f, r0	; 63
 80e:	cd bf       	out	0x3d, r28	; 61
 810:	ed 01       	movw	r28, r26
 812:	08 95       	ret

00000814 <_exit>:
 814:	f8 94       	cli

00000816 <__stop_program>:
 816:	ff cf       	rjmp	.-2      	; 0x816 <__stop_program>
